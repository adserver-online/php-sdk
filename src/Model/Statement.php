<?php
/**
 * Statement
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Adserver
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Copyright (c) 2020-2022 Adserver.Online
 * @link: https://adserver.online
 * Contact: support@adsrv.org
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Adserver\Model;

use \ArrayAccess;
use \Adserver\ObjectSerializer;

/**
 * Statement Class Doc Comment
 *
 * @category Class
 * @package  Adserver
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Statement implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Statement';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'user' => 'object',
        'deposit' => 'float',
        'spend' => 'float',
        'revenue' => 'float',
        'payout' => 'float',
        'advert_other_in' => 'float',
        'advert_other_out' => 'float',
        'publish_other_in' => 'float',
        'publish_other_out' => 'float',
        'advert_balance' => 'float',
        'publish_balance' => 'float',
        'stats_spend' => 'float',
        'stats_revenue' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'user' => null,
        'deposit' => null,
        'spend' => null,
        'revenue' => null,
        'payout' => null,
        'advert_other_in' => null,
        'advert_other_out' => null,
        'publish_other_in' => null,
        'publish_other_out' => null,
        'advert_balance' => null,
        'publish_balance' => null,
        'stats_spend' => null,
        'stats_revenue' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'user' => 'user',
        'deposit' => 'deposit',
        'spend' => 'spend',
        'revenue' => 'revenue',
        'payout' => 'payout',
        'advert_other_in' => 'advert_other_in',
        'advert_other_out' => 'advert_other_out',
        'publish_other_in' => 'publish_other_in',
        'publish_other_out' => 'publish_other_out',
        'advert_balance' => 'advert_balance',
        'publish_balance' => 'publish_balance',
        'stats_spend' => 'stats_spend',
        'stats_revenue' => 'stats_revenue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'user' => 'setUser',
        'deposit' => 'setDeposit',
        'spend' => 'setSpend',
        'revenue' => 'setRevenue',
        'payout' => 'setPayout',
        'advert_other_in' => 'setAdvertOtherIn',
        'advert_other_out' => 'setAdvertOtherOut',
        'publish_other_in' => 'setPublishOtherIn',
        'publish_other_out' => 'setPublishOtherOut',
        'advert_balance' => 'setAdvertBalance',
        'publish_balance' => 'setPublishBalance',
        'stats_spend' => 'setStatsSpend',
        'stats_revenue' => 'setStatsRevenue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'user' => 'getUser',
        'deposit' => 'getDeposit',
        'spend' => 'getSpend',
        'revenue' => 'getRevenue',
        'payout' => 'getPayout',
        'advert_other_in' => 'getAdvertOtherIn',
        'advert_other_out' => 'getAdvertOtherOut',
        'publish_other_in' => 'getPublishOtherIn',
        'publish_other_out' => 'getPublishOtherOut',
        'advert_balance' => 'getAdvertBalance',
        'publish_balance' => 'getPublishBalance',
        'stats_spend' => 'getStatsSpend',
        'stats_revenue' => 'getStatsRevenue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['user'] = $data['user'] ?? null;
        $this->container['deposit'] = $data['deposit'] ?? null;
        $this->container['spend'] = $data['spend'] ?? null;
        $this->container['revenue'] = $data['revenue'] ?? null;
        $this->container['payout'] = $data['payout'] ?? null;
        $this->container['advert_other_in'] = $data['advert_other_in'] ?? null;
        $this->container['advert_other_out'] = $data['advert_other_out'] ?? null;
        $this->container['publish_other_in'] = $data['publish_other_in'] ?? null;
        $this->container['publish_other_out'] = $data['publish_other_out'] ?? null;
        $this->container['advert_balance'] = $data['advert_balance'] ?? null;
        $this->container['publish_balance'] = $data['publish_balance'] ?? null;
        $this->container['stats_spend'] = $data['stats_spend'] ?? null;
        $this->container['stats_revenue'] = $data['stats_revenue'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets user
     *
     * @return object|null
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param object|null $user user
     *
     * @return self
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets deposit
     *
     * @return float|null
     */
    public function getDeposit()
    {
        return $this->container['deposit'];
    }

    /**
     * Sets deposit
     *
     * @param float|null $deposit deposit
     *
     * @return self
     */
    public function setDeposit($deposit)
    {
        $this->container['deposit'] = $deposit;

        return $this;
    }

    /**
     * Gets spend
     *
     * @return float|null
     */
    public function getSpend()
    {
        return $this->container['spend'];
    }

    /**
     * Sets spend
     *
     * @param float|null $spend spend
     *
     * @return self
     */
    public function setSpend($spend)
    {
        $this->container['spend'] = $spend;

        return $this;
    }

    /**
     * Gets revenue
     *
     * @return float|null
     */
    public function getRevenue()
    {
        return $this->container['revenue'];
    }

    /**
     * Sets revenue
     *
     * @param float|null $revenue revenue
     *
     * @return self
     */
    public function setRevenue($revenue)
    {
        $this->container['revenue'] = $revenue;

        return $this;
    }

    /**
     * Gets payout
     *
     * @return float|null
     */
    public function getPayout()
    {
        return $this->container['payout'];
    }

    /**
     * Sets payout
     *
     * @param float|null $payout payout
     *
     * @return self
     */
    public function setPayout($payout)
    {
        $this->container['payout'] = $payout;

        return $this;
    }

    /**
     * Gets advert_other_in
     *
     * @return float|null
     */
    public function getAdvertOtherIn()
    {
        return $this->container['advert_other_in'];
    }

    /**
     * Sets advert_other_in
     *
     * @param float|null $advert_other_in advert_other_in
     *
     * @return self
     */
    public function setAdvertOtherIn($advert_other_in)
    {
        $this->container['advert_other_in'] = $advert_other_in;

        return $this;
    }

    /**
     * Gets advert_other_out
     *
     * @return float|null
     */
    public function getAdvertOtherOut()
    {
        return $this->container['advert_other_out'];
    }

    /**
     * Sets advert_other_out
     *
     * @param float|null $advert_other_out advert_other_out
     *
     * @return self
     */
    public function setAdvertOtherOut($advert_other_out)
    {
        $this->container['advert_other_out'] = $advert_other_out;

        return $this;
    }

    /**
     * Gets publish_other_in
     *
     * @return float|null
     */
    public function getPublishOtherIn()
    {
        return $this->container['publish_other_in'];
    }

    /**
     * Sets publish_other_in
     *
     * @param float|null $publish_other_in publish_other_in
     *
     * @return self
     */
    public function setPublishOtherIn($publish_other_in)
    {
        $this->container['publish_other_in'] = $publish_other_in;

        return $this;
    }

    /**
     * Gets publish_other_out
     *
     * @return float|null
     */
    public function getPublishOtherOut()
    {
        return $this->container['publish_other_out'];
    }

    /**
     * Sets publish_other_out
     *
     * @param float|null $publish_other_out publish_other_out
     *
     * @return self
     */
    public function setPublishOtherOut($publish_other_out)
    {
        $this->container['publish_other_out'] = $publish_other_out;

        return $this;
    }

    /**
     * Gets advert_balance
     *
     * @return float|null
     */
    public function getAdvertBalance()
    {
        return $this->container['advert_balance'];
    }

    /**
     * Sets advert_balance
     *
     * @param float|null $advert_balance advert_balance
     *
     * @return self
     */
    public function setAdvertBalance($advert_balance)
    {
        $this->container['advert_balance'] = $advert_balance;

        return $this;
    }

    /**
     * Gets publish_balance
     *
     * @return float|null
     */
    public function getPublishBalance()
    {
        return $this->container['publish_balance'];
    }

    /**
     * Sets publish_balance
     *
     * @param float|null $publish_balance publish_balance
     *
     * @return self
     */
    public function setPublishBalance($publish_balance)
    {
        $this->container['publish_balance'] = $publish_balance;

        return $this;
    }

    /**
     * Gets stats_spend
     *
     * @return float|null
     */
    public function getStatsSpend()
    {
        return $this->container['stats_spend'];
    }

    /**
     * Sets stats_spend
     *
     * @param float|null $stats_spend stats_spend
     *
     * @return self
     */
    public function setStatsSpend($stats_spend)
    {
        $this->container['stats_spend'] = $stats_spend;

        return $this;
    }

    /**
     * Gets stats_revenue
     *
     * @return float|null
     */
    public function getStatsRevenue()
    {
        return $this->container['stats_revenue'];
    }

    /**
     * Sets stats_revenue
     *
     * @param float|null $stats_revenue stats_revenue
     *
     * @return self
     */
    public function setStatsRevenue($stats_revenue)
    {
        $this->container['stats_revenue'] = $stats_revenue;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


